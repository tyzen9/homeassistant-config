# *****************************************************************************
# HA Mobile Package - Used for notifications on the HA Mobile application,
#   sometimes called "HA Companion"
#
# Author: Steve Theisen (steve@tyzen9.com)
#         www.tyzen9.com  -  github.com/tyzen9
#
# Usage:
#   1. Place this package file in a config/packages folder
#   2. Add this to your configuration.yaml:
#      |homeassistant:
#      |  packages: !include_dir_named packages
#   3. Satisfy all dependant "external" entities (see note/examples below)
#   4. Restart Home Assistant
#   5. Drink a cold beverage
#
# Note: Packages require access to entities that are often configured outside
# of this file.  Manytimes, these are from common integrations such as ESPHome,
# Shelly, Zigbee, etc.  These dependant entities are called out in each package
# declaration below.
#
# Some Examples:
#   - HACS Alexa Media Player: https://github.com/alandtse/alexa_media_player/wiki
#
# *****************************************************************************

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# SENSORS
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
template:
  # ---------------------------------------------------------------------------
  # These sensors are used to keep the name of each person's mobile device by
  # its ID.  We do this to obfuscate the information that is pushed to github
  #
  # Dependencies:
  #  - secrets.yaml (YAML secrets)
  # ---------------------------------------------------------------------------
  - sensor:
      - name: Person 1 - Mobile ID
        unique_id: person_1_mobile_id
        state: !secret person_1_mobile_id

  - sensor:
      - name: Person 2 - Mobile ID
        unique_id: person_2_mobile_id
        state: !secret person_2_mobile_id

  - sensor:
      - name: Person 3 - Mobile ID
        unique_id: person_3_mobile_id
        state: !secret person_3_mobile_id

  - sensor:
      - name: Person 4 - Mobile ID
        unique_id: person_4_mobile_id
        state: !secret person_4_mobile_id

  - sensor:
      - name: Person 5 - Mobile ID
        unique_id: person_5_mobile_id
        state: !secret person_5_mobile_id

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# NOTIFICATIONS
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
notify:
  # ---------------------------------------------------------------------------
  # This notification is used mostly by alerts to send critical alerts
  #
  # Usage Example:
  #   action: notify.critical_message
  #   data:
  #     message: Test Critical Message
  #
  #  Dependencies:
  #  - notify.mobile_app_person_1 (HA Companion App https://companion.home-assistant.io/)
  # ---------------------------------------------------------------------------
  - name: critical_message
    platform: group
    services:
      - action: mobile_app_person_1
        data:
          data:
            push:
              sound:
                name: "default"
                critical: 1
                volume: 1.0

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# SCRIPTS
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
script:
  # ---------------------------------------------------------------------------
  # This script is used to send messages to one or move Home Assistant mobile
  #   devices
  #
  # Note - that each person in our household is assigned a number, and the
  #   lookups for that number are stored in the secrets.yaml file.
  #
  # Params
  #   title (String)(required)
  #   message (String)(required)
  #   priority (String)(Default: "normal") "normal","critical"
  #   presence (String)(Default: "either") "home","away"
  #        "either" - send regardless of location
  #        "home" - only send if the person is home
  #        "away" - only send if the person is away
  #   only_if_away (Boolean)(Default: false)
  #   only_house_awake (Boolean)(Default: false)
  #   target (List)(required)
  #
  # Usage Example
  #   action: script.ha_mobile_notification
  #    data:
  #     title: Test Title
  #     message: Message Body
  #     priority: normal
  #     presence: either
  #     only_house_awake: false
  #     target:
  #       - person_1
  #
  #   Dependencies:
  #  - binary_sensor.house_awake (YAML house_pkg.yaml)
  # ---------------------------------------------------------------------------
  ha_mobile_notification:
    alias: HA Mobile - Notification
    icon: mdi:cellphone-message
    description: "Send an announcement to a Home Assistant Mobile (Companion) Device"
    mode: single
    fields:
      title:
        name: "Title"
        description: "This is the message title"
        default: "Test Title"
        required: true
        selector:
          text:
      message:
        name: "Message"
        description: "The message to be sent"
        default: "Test Message"
        required: true
        selector:
          text:
      priority:
        name: "Message Priority"
        description: "The priority of the message"
        default: normal
        required: false
        selector:
          select:
            options:
              - normal
              - critical
            mode: dropdown
      presence:
        name: "Presence"
        description: "Only send the message if this person is Home, Away or Either"
        default: either
        required: false
        selector:
          select:
            options:
              - home
              - away
              - either
            mode: dropdown
      only_house_awake:
        name: "Only when the house is awake"
        description: "Only send a notification when the house is awake (requires binary_sensor.house_awake)"
        default: false
        required: false
        selector:
          boolean:
      target:
        name: "Target User"
        description: "The device(s) on which to make the announcement"
        required: true
        selector:
          select:
            options:
              - person_1
              - person_2
              - person_3
              - person_4
              - person_5
            multiple: true

    sequence:
      # These variables set default values if none are provided
      - variables:
          pri: "{{ priority if priority is defined else 'normal' }}"
          pres: "{{ presence if presence is defined else 'either' }}"
          oha: "{{ only_house_awake if only_house_awake is defined else false }}"
          mobile_id: "null"
      - if:
          - condition: or
            conditions:
              # If we are NOT worried about quiet hours
              - condition: template
                value_template: "{{ oha == False }}"
              # OR we are respecting quiet hours, and quiet hours are off
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ oha == True }}"
                  - condition: state
                    entity_id: binary_sensor.house_awake
                    state: "on"
        then:
          - repeat:
              for_each: >
                {{ target }}
              sequence:
                - if:
                    - condition: or
                      conditions:
                        # If we are NOT worried about the recepient's location then move on
                        - condition: template
                          value_template: '{{ pres == "either" }}'
                        # If ther person needs to be away, then make sure of that
                        - condition: and
                          conditions:
                            - condition: template
                              value_template: '{{ pres == "away" }}'
                            - condition: template
                              value_template: >
                                {% if (repeat.item == 'person_1') and (states('binary_sensor.person_1_home') == 'off') %} 
                                  true
                                {% elif (repeat.item == 'person_2') and (states('binary_sensor.person_2_home') == 'off') %} 
                                  true
                                {% elif (repeat.item == 'person_3') and (states('binary_sensor.person_3_home') == 'off') %}
                                  true
                                {% elif (repeat.item == 'person_4') and (states('binary_sensor.person_4_home') == 'off') %}
                                  true
                                {% elif (repeat.item == 'person_5') and (states('binary_sensor.person_5_home') == 'off') %}
                                  true
                                {% endif %}
                        # If ther person needs to be home, then validate that!
                        - condition: and
                          conditions:
                            - condition: template
                              value_template: '{{ pres == "home" }}'
                            - condition: template
                              value_template: >
                                {% if (repeat.item == 'person_1') and (states('binary_sensor.person_1_home') == 'on') %} 
                                  true
                                {% elif (repeat.item == 'person_2') and (states('binary_sensor.person_2_home') == 'on') %} 
                                  true
                                {% elif (repeat.item == 'person_3') and (states('binary_sensor.person_3_home') == 'on') %}
                                  true
                                {% elif (repeat.item == 'person_4') and (states('binary_sensor.person_4_home') == 'on') %}
                                  true
                                {% elif (repeat.item == 'person_5') and (states('binary_sensor.person_5_home') == 'on') %}
                                  true
                                {% endif %}
                  then:
                    - action: script.ha_send_mobile_notification
                      data:
                        mobile_id: >-
                          {% if (repeat.item == 'person_1') %}
                            {{ states('sensor.person_1_mobile_id') }}
                          {% elif (repeat.item == 'person_2') %}
                            {{ states('sensor.person_2_mobile_id') }}
                          {% elif (repeat.item == 'person_3') %}
                            {{ states('sensor.person_3_mobile_id') }}
                          {% elif (repeat.item == 'person_4') %}
                            {{ states('sensor.person_4_mobile_id') }}
                          {% elif (repeat.item == 'person_5') %}
                            {{ states('sensor.person_5_mobile_id') }}
                          {% endif %}
                        msg_title: "{{ title }}"
                        msg_body: "{{ message }}"
                        priority: "{{ pri }}"

  # ---------------------------------------------------------------------------
  # This script is used to send a notification to a HA Mobile Companion App
  #
  # Params
  #   mobile_id (String)(required) - The mobile_id to send the message to
  #      - This name is found in actions and is formatted like: notify.mobile_app_bobs_iphone
  #        In this case you should pass "bobs_iphone"
  #      - This name is also found in the companion app settings, under the
  #        server name, and the propery "Device Name"
  #   msg_title (String)(required) - Title of the message to send
  #   msg_body  (String) - The body of the message to send
  #   priority  (String)(Default: "Normal") "Normal","Critical"
  #
  # Dependencies:
  #  - notify.mobile_app_person_x (HA Companion App https://companion.home-assistant.io/)
  # ---------------------------------------------------------------------------
  ha_send_mobile_notification:
    alias: " HA Mobile - Send Notification"
    sequence:
      - variables:
          mobile_id: "{{ mobile_id }}"
          msg_title: "{{ msg_title }}"
          msg_body: "{{ msg_body }}"
          pri: "{{ priority if priority is defined else 'Normal' }}"

      - if:
          - condition: template
            value_template: '{{ pri == "critical" }}'
        # If this is a "Critical" priority notification we do this
        then:
          - action: notify.{{ mobile_id }}
            data:
              title: "{{ msg_title }}"
              message: "{{ msg_body }}"
              data:
                push:
                  sound:
                    name: "default"
                    critical: 1
                    volume: 1.0
        # If this is a normal priority, then do this
        else:
          - action: notify.{{ mobile_id }}
            data:
              title: "{{ msg_title }}"
              message: "{{ msg_body }}"
